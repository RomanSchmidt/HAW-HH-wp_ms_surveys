version: 0.2

phases:
  install:
    runtime-versions:
      docker: latest
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --no-include-email)
      - REPOSITORY_URI=390532851048.dkr.ecr.us-east-2.amazonaws.com/wp-ms-surveys-mongo # uri of ECR
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo install dependencies
      - echo Build started on ´date´
      - echo Building the Docker image...
      - docker pull mongo # get the mongo repo for docker
      - docker build -t $REPOSITORY_URI:latest -f ./src/Mongo/Dockerfile ./src/Mongo # build with with Dockerfile in Survey and set the latest tag
      - docker tag $REPOSITORY_URI $REPOSITORY_URI:$IMAGE_TAG # add another tag for aws to refer to a source image
  post_build:
    commands:
      - echo Build complete on `date`
      - echo Pusching the Docker images...
      - docker push $REPOSITORY_URI:latest # push to aws as latest tag
      - docker push $REPOSITORY_URI:$IMAGE_TAG # push to aws as regular tag
      - echo Writing image definitions file...
      - printf '[{"name":"wp-ms-surveys-mongo-container","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json # create a file which helps the aws service to find the image
artifacts:
  files: imagedefinitions.json # add the created file to the docker image